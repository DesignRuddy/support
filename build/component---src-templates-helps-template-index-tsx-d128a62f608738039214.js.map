{"version":3,"file":"component---src-templates-helps-template-index-tsx-d128a62f608738039214.js","mappings":"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","sources":["webpack://support_sosok/./src/models/helps.ts","webpack://support_sosok/./src/components/SearchInput/styled.ts","webpack://support_sosok/./src/components/SearchInput/index.tsx","webpack://support_sosok/./src/templates/helps-template/styled.ts","webpack://support_sosok/./src/components/PostCard/styled.tsx","webpack://support_sosok/./src/components/PostCard/index.tsx","webpack://support_sosok/./src/templates/helps-template/index.tsx"],"sourcesContent":["import { MarkdownRemark } from '../type';\r\n\r\nexport default class HelpsClass {\r\n  id;\r\n  html;\r\n  slug;\r\n  title;\r\n  date;\r\n  services;\r\n  excerpt;\r\n  categories;\r\n  // filteredCategories;\r\n\r\n  constructor(node: MarkdownRemark) {\r\n    const { html, id, frontmatter, fields, excerpt } = node;\r\n    const { slug } = fields;\r\n    const { categories, title, date, services } = frontmatter;\r\n\r\n    const categoryArr = categories.split(' ');\r\n\r\n    this.id = id;\r\n    this.excerpt = excerpt;\r\n    this.services = services\r\n    this.html = html;\r\n    this.slug = slug;\r\n    this.title = title;\r\n    this.date = date;\r\n    this.categories = categoryArr;\r\n    // this.filteredCategories = categoryArr.map((category) => {\r\n    //   return category.replace('featured-', '').trim();\r\n    // });\r\n  }\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\nimport { MOBILE_MEDIA_QUERY, contentMaxWidth } from '@/src/styles/const';\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 100%;\r\n  height: auto;\r\n\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    border-radius: 20px;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const SearchWrapper = styled.div`\r\n  width: 100%;\r\n  max-width: ${contentMaxWidth};\r\n`;\r\n\r\nexport const InputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\n\r\nexport const SearchTitle = styled.div`\r\n  margin-bottom: 60px;\r\n  line-height: 27px;\r\n  font-family: 'SUIT-Bold';\r\n  font-size: 27px;\r\n`;\r\n\r\nexport const SearchIcon = styled.span`\r\n  position: absolute;\r\n  left: 0;\r\n  transform: translateY(-50%);\r\n  background-image: url('/search_icon.svg'); \r\n  background-size: cover;\r\n  width: 25px; // 아이콘의 크기에 맞게 조정\r\n  height: 25px;\r\n  pointer-events: auto;\r\n`;\r\n\r\nexport const SearchInput = styled.input`\r\n    padding: 8px 12px;\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n    border-bottom: 1px solid #ccc;\r\n    font-size: 27px;\r\n    caret-color: #36E579;\r\n    margin: 0;\r\n\r\n    @media ${MOBILE_MEDIA_QUERY} {\r\n      border-radius: 5px;\r\n      width: 100%;\r\n      font-size: 18px;\r\n\r\n      &::placeholder{\r\n        font-size: 18px;\r\n      }\r\n    }\r\n\r\n    &::placeholder{\r\n        color: #ccc;\r\n    }\r\n\r\n    &:focus {\r\n    outline: none;\r\n}\r\n`;\r\n","// SearchInput.js\r\nimport React from 'react';\r\n\r\nimport { Search } from '@/src/type';\r\n\r\nimport * as S from './styled';\r\n\r\ntype SearchInputProps = {\r\n    Search?: Search;\r\n    onFocus: () => void;\r\n    onBlur: () => void;\r\n    handleSearchChange: (searchValue: string) => void;\r\n}\r\n\r\nconst SearchInput: React.FC<SearchInputProps> = (props: SearchInputProps) => {\r\n    const {\r\n        onBlur,\r\n        onFocus,\r\n        handleSearchChange\r\n    } = props;\r\n\r\n    return (\r\n        <S.Wrapper>\r\n            <S.SearchTitle>\r\n                궁금했던 질문을 작성해주세요.\r\n            </S.SearchTitle>\r\n\r\n            <S.InputWrapper>\r\n                {/* <S.SearchIcon /> */}\r\n                <S.SearchInput\r\n                    placeholder=\"찾으시는 키워드를 입력해주세요 !\"\r\n                    onChange={(e) => handleSearchChange(e.target.value)}\r\n                    onFocus={onFocus}\r\n                    onBlur={onBlur}\r\n                />\r\n            </S.InputWrapper>\r\n        </S.Wrapper>\r\n    );\r\n};\r\n\r\nexport default SearchInput;\r\n","import styled from '@emotion/styled';\r\nimport { contentMaxWidth, MOBILE_MEDIA_QUERY } from '@/src/styles/const';\r\n\r\nexport const heplsWrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nexport const SearchWrapper = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 80px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const TestDiv =styled.div`\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const DropDownWrapper = styled.div<{ isFocused: boolean }>`\r\n  position: absolute;\r\n  width: 100%;\r\n  font-size: 16px;\r\n  background-color: white;\r\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1); \r\n  border-radius: 8px;\r\n  overflow: hidden; \r\n  z-index: 1000;\r\n  display: ${props => (props.isFocused ? 'block' : 'hidden')}; // 조건부 렌더링\r\n`;\r\n\r\nexport const DropDown = styled.div`\r\n  border: 0.5px solid #dfe1e5;\r\n  border-radius: 6px;\r\n  box-shadow: 0 3px 15px 0 rgba(0, 0, 0, 0.16);\r\n  width: 100%;\r\n  color: #333;\r\n  height: auto;\r\n  font-size: 14px; \r\n  font-family: SUIT-Regular;\r\n  `;\r\n\r\nexport const DropDownItem = styled.button`\r\n  width: 100%; \r\n  padding: 14px 20px; \r\n  border: none;\r\n  border-radius: 12px;\r\n  background: none; \r\n  text-align: left; \r\n  font-size: 14px; \r\n  color: #333; \r\n  cursor: pointer; \r\n  font-family: SUIT-Regular;\r\n  transition: background-color 0.2s; // \r\n\r\n  &:hover {\r\n    background-color: #f7f7f7; // \r\n  }\r\n`;\r\n\r\n\r\n/** \r\n * 여기서부터 카테고리 \r\n */ \r\nexport const CategoryWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-top: 30px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const CategoryTitle = styled.div`\r\n  width: fit-content;\r\n  margin-bottom: 15px;\r\n  font-size: 30px;\r\n  text-align: center;\r\n\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    font-size: 25px;\r\n  }\r\n`;\r\n\r\nexport const CategorySubtitle = styled.div`\r\n  padding-bottom: 10px;\r\n  font-size: 20px;\r\n  /* text-align: center; */\r\n  font-family: SUIT-Regular;\r\n`;\r\n\r\n/**\r\n * 여기서 부터는 탭\r\n */\r\nexport const MainWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  top: 0px;\r\n  width: 100%;\r\n`;\r\n\r\nexport const TabWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-self: flex-start;\r\n  top: 0px;\r\n  max-width: 250px;\r\n`;\r\n\r\nexport const Tabs = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  /* justify-content: center; */\r\n  width: 100%;\r\n  /* max-width: ${contentMaxWidth} + 40px; */\r\n  /* gap: 24px; */\r\n  overflow-y: hidden;\r\n  overflow-x: scroll;\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    justify-content: flex-start;\r\n  }\r\n`;\r\n\r\nexport const Tab = styled.div<{ isSelected: 'true' | 'false' }>`\r\n  font-size: 17px;\r\n  font-weight: bolder;\r\n  width: 100%;\r\n  cursor: pointer;\r\n  line-height: 50px;\r\n  padding: 12px 16px;\r\n  color: ${({ isSelected, theme }) => (isSelected === 'true' ? theme.color.black100 : theme.color.gray60)};\r\n`;\r\n\r\nexport const PostCardsWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { Link } from 'gatsby';\r\n\r\nimport { contentMaxWidth, hoverUnderline, MOBILE_MEDIA_QUERY } from '@/src/styles/const';\r\n\r\nexport const Wrapper = styled.div`\r\n  min-height: auto;\r\n  width: 100%;\r\n  position: relative;\r\n`;\r\n\r\nexport const PostCard = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  height: 100%;\r\n  width: 100%;\r\n  max-width: ${contentMaxWidth};\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  margin-bottom: 15px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${({ theme }) => theme.color.gray10};\r\n    @media ${MOBILE_MEDIA_QUERY} {\r\n      background-color: transparent;\r\n    }\r\n  }\r\n  @media ${MOBILE_MEDIA_QUERY} {\r\n    &:active {\r\n      background-color: ${({ theme }) => theme.color.gray10};\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Title = styled.div`\r\n  font-size: 18px;\r\n  margin-bottom: 10px;\r\n  line-height: 1.4;\r\n`;\r\n\r\nexport const Description = styled.p`\r\n  font-size: 13px;\r\n  margin-bottom: 20px;\r\n  line-height: 20px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  word-break: break-word;\r\n  -webkit-line-clamp: 3;\r\n  -webkit-box-orient: vertical;\r\n  font-family: SUIT_Regular;\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  font-size: 13px;\r\n  width: 100%;\r\n  padding: 0 15px;\r\n  color: ${({ theme }) => theme.color.gray60};\r\n  font-family: GmarketSansLight;\r\n  position: absolute;\r\n  bottom: 25px;\r\n`;\r\n\r\nexport const Date = styled.div``;\r\n\r\nexport const Categories = styled.div`\r\n  display: flex;\r\n`;\r\n\r\nexport const Category = styled(Link)`\r\n  margin-left: 4px;\r\n  color: ${({ theme }) => theme.color.gray60};\r\n  ${({ theme }) => hoverUnderline(theme)};\r\n  &:after {\r\n    background-color: ${({ theme }) => theme.color.gray60};\r\n  }\r\n`;\r\n","import React from 'react';\r\n\r\nimport * as S from './styled';\r\nimport HelpsClass from '@/src/models/helps';\r\n\r\ntype PostCardProps = {\r\n  item: any;\r\n};\r\n\r\nconst PostCard: React.FC<PostCardProps> = ({ item }) => {\r\n  const { id, excerpt, frontmatter, fields } = item;\r\n\r\n  const { slug } = fields;\r\n  console.log(\"item\", item);\r\n  \r\n  return (\r\n    <S.Wrapper>\r\n      <S.PostCard key={id} to={slug}>\r\n        <S.Title className='title'>\r\n          <span style={{ marginRight: '8px', fontSize: '21px', fontWeight: 'bold' }}>Q.</span>\r\n          {frontmatter.title}\r\n        </S.Title>\r\n        <S.Description dangerouslySetInnerHTML={{ __html: excerpt }} />\r\n      </S.PostCard>\r\n    </S.Wrapper>\r\n  );\r\n};\r\n\r\nexport default PostCard;\r\n","import { graphql, navigate } from 'gatsby';\r\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\r\n\r\nimport Seo from '@/src/components/Seo';\r\nimport Layout from '@/src/layout';\r\nimport SearchInput from '@/src/components/SearchInput'\r\nimport { AllMarkdownRemark } from '@/src/type';\r\n\r\nimport * as S from './styled';\r\nimport PostCard from '@/src/components/PostCard';\r\nimport HelpsClass from '@/src/models/helps';\r\n// import { DividerHorizontalIcon } from '@radix-ui/react-icons';\r\n\r\ntype HelpsTemplateProps = {\r\n  location: Location;\r\n  pageContext: {\r\n    // currentCategory: string;\r\n    // categories: string[];\r\n    edges: AllMarkdownRemark['edges'];\r\n  };\r\n};\r\n\r\nconst HelpsTemplate: React.FC<HelpsTemplateProps> = ({ location, pageContext }) => {\r\n\r\n  const { edges } = pageContext;\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filteredFaqs, setFilteredFaqs] = useState<HelpsClass[]>([]);\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const [currentCategory, setCurrentCategory] = useState('전체');\r\n\r\n\r\n  const items = useMemo(() => edges.map(({ node }) => new HelpsClass(node)), [edges]);\r\n\r\n  const filteredPosts = useMemo(() => {\r\n    if (currentCategory === '전체') {\r\n      return items;\r\n    }\r\n    return items.filter(post => post.services === currentCategory);\r\n  }, [currentCategory, items]);\r\n\r\n  // const currentTabIndex = useMemo(\r\n  //   () => categories.findIndex((category) => category === currentCategory),\r\n  //   [categories, currentCategory],\r\n  // );\r\n\r\n  /**\r\n   * /posts로 back || categories의 value로 이동\r\n   */\r\n\r\n  // const onTabIndexChange = (value: number) => {\r\n  //   if (value === 0) return navigate(`/helps`);\r\n  //   navigate(`/helps/${categories[value]}`);\r\n  // };\r\n\r\n  // const ref = useRef<HTMLDivElement>(null);\r\n\r\n  // currentTab이 가운데에 오도록 스크롤\r\n  // useEffect(() => {\r\n  //   if (!ref.current) return;\r\n  //   const currentTab = ref.current.children[currentTabIndex] as HTMLDivElement;\r\n  //   ref.current.scrollTo({ left: currentTab.offsetLeft - (ref.current.offsetWidth - currentTab.offsetWidth) / 2 });\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    if (searchTerm) {\r\n      const Terms = edges\r\n        .map(({ node }) => new HelpsClass(node))\r\n        .filter(help =>\r\n          help.title.includes(searchTerm) ||\r\n          help.excerpt.includes(searchTerm)\r\n        );\r\n      setFilteredFaqs(Terms);\r\n    } else {\r\n      setFilteredFaqs([]);\r\n    }\r\n    console.log(\"filteredFaqs\", filteredFaqs);\r\n  }, [searchTerm, edges]);\r\n\r\n  const handleSearchChange = (term: any) => {\r\n    setSearchTerm(term);\r\n  };\r\n\r\n  const handleFocus = () => {\r\n    setIsFocused(true);\r\n  };\r\n\r\n  const handleBlur = (event: React.FocusEvent<HTMLDivElement>) => {\r\n    // 드롭다운이나 검색 필드 외부를 클릭할 때만 포커스를 해제합니다.\r\n    if (!event.currentTarget.contains(event.relatedTarget as Node)) {\r\n      setIsFocused(false);\r\n    }\r\n  };\r\n\r\n  const handleCategoryChange = (category: string) => {\r\n    setCurrentCategory(category);\r\n  };\r\n\r\n  const item = edges.map(data => data.node)\r\n  // console.log(\"data.slug?\", filteredFaqs.map(data => data.slug));\r\n  console.log(item);\r\n\r\n  const path = location.pathname.split('/')[1];\r\n\r\n  return (\r\n    <>\r\n      <Layout location={location}>\r\n        <Seo title={'질문하기'} />\r\n\r\n\r\n        <S.SearchWrapper>\r\n          <SearchInput\r\n            handleSearchChange={handleSearchChange}\r\n            onFocus={() => setIsFocused(true)}\r\n            onBlur={() => setIsFocused(false)}\r\n          />\r\n        </S.SearchWrapper>\r\n\r\n        {/* 검색쿼리에 관한 DropDown */}\r\n        <S.DropDownWrapper\r\n          isFocused={isFocused}\r\n          onFocus={handleFocus}\r\n          onBlur={handleBlur}\r\n          tabIndex={-1} // 이 속성은 div가 포커스를 받을 수 있도록 합니다.\r\n        >\r\n          {searchTerm ? (\r\n            <S.DropDown>\r\n              {filteredFaqs.map(help => (\r\n                <S.DropDownItem\r\n                  key={help.id}\r\n                  onClick={() => navigate(\r\n                    help.slug\r\n                  )} // 아이템 클릭 시 상세 페이지로 이동\r\n                >\r\n                  {help.title}\r\n                </S.DropDownItem>\r\n              ))}\r\n            </S.DropDown>\r\n          ) : (\r\n            <></>\r\n          )\r\n          }\r\n        </S.DropDownWrapper>\r\n\r\n        <S.MainWrapper>\r\n\r\n          {/* 서비스 탭 */}\r\n          <S.TabWrapper>\r\n            <S.Tabs>\r\n              {['전체', '소속', '비즈니스', '아지트'].map((category, index) => (\r\n                <S.Tab\r\n                  key={index}\r\n                  isSelected={currentCategory === category ? 'true' : 'false'}\r\n                  onClick={() => handleCategoryChange(category)}\r\n                >\r\n                  {category}\r\n                </S.Tab>\r\n              ))}\r\n            </S.Tabs>\r\n          </S.TabWrapper>\r\n\r\n\r\n          {/* 카테고리 탭 */}\r\n          <S.PostCardsWrapper>\r\n            {item.map((item, index) => (\r\n              <PostCard key={index} item={item} />\r\n            ))}\r\n          </S.PostCardsWrapper>\r\n\r\n        </S.MainWrapper>\r\n      </Layout>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HelpsTemplate;\r\n\r\n\r\nexport const pageQuery = graphql`\r\n  query($id: String) {\r\n\t\t markdownRemark(fields: {slug: {eq: $id}}) {\r\n      id\r\n      excerpt(pruneLength: 500, truncate: true)\r\n      frontmatter {\r\n        date(formatString: \"YYYY.MM.DD\")\r\n        title\r\n        categories\r\n      }\r\n      fields {\r\n        slug\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["HelpsClass","node","html","id","frontmatter","fields","excerpt","slug","categories","title","date","services","categoryArr","split","this","Wrapper","_styled","target","MOBILE_MEDIA_QUERY","InputWrapper","name","styles","SearchTitle","SearchInput","props","onBlur","onFocus","handleSearchChange","___EmotionJSX","S","placeholder","onChange","e","value","SearchWrapper","DropDownWrapper","isFocused","DropDown","DropDownItem","MainWrapper","TabWrapper","Tabs","Tab","_ref","isSelected","theme","color","black100","gray60","PostCardsWrapper","PostCard","Link","contentMaxWidth","gray10","_ref2","Title","Description","item","console","log","key","to","className","style","marginRight","fontSize","fontWeight","dangerouslySetInnerHTML","__html","location","edges","pageContext","_useState","useState","searchTerm","setSearchTerm","_useState2","filteredFaqs","setFilteredFaqs","_useState3","setIsFocused","_useState4","currentCategory","setCurrentCategory","items","useMemo","map","filter","post","useEffect","Terms","_ref3","help","includes","data","pathname","React","Layout","Seo","term","event","currentTarget","contains","relatedTarget","tabIndex","onClick","navigate","category","index","handleCategoryChange"],"sourceRoot":""}